---
- name: Create Connected VPC
  amazon.aws.ec2_vpc_net:
    name: "{{ aws_connected_vpc_name }}"
    state: present
    cidr_block: "{{ aws_connected_vpc_cidr }}"
    region: "{{ aws_region }}"
  register: connected_vpc_info

- name: Create Connected Private Subnet on Az1
  amazon.aws.ec2_vpc_subnet:
    state: present
    vpc_id: "{{ connected_vpc_info.vpc.id }}"
    cidr: "{{ aws_connected_subnet_cidr_az1 }}"
    region: "{{ aws_region }}"
    az: "{{ aws_availability_zone_1 }}"
    tags:
      Name: "{{ aws_connected_vpc_name }}-subnet-az1"
  register: connected_subnet_info_az1

- name: Create Connected Private Subnet on Az2
  amazon.aws.ec2_vpc_subnet:
    state: present
    vpc_id: "{{ connected_vpc_info.vpc.id }}"
    cidr: "{{ aws_connected_subnet_cidr_az2 }}"
    region: "{{ aws_region }}"
    az: "{{ aws_availability_zone_2 }}"
    tags:
      Name: "{{ aws_connected_vpc_name }}-subnet-az2"
  register: connected_subnet_info_az2

- name: Create Connected Private Subnet on Az3
  amazon.aws.ec2_vpc_subnet:
    state: present
    vpc_id: "{{ connected_vpc_info.vpc.id }}"
    cidr: "{{ aws_connected_subnet_cidr_az3 }}"
    region: "{{ aws_region }}"
    az: "{{ aws_availability_zone_3 }}"
    tags:
      Name: "{{ aws_connected_vpc_name }}-subnet-az3"
  register: connected_subnet_info_az3

- name: Create Connected Public Subnet on Az1
  amazon.aws.ec2_vpc_subnet:
    state: present
    vpc_id: "{{ connected_vpc_info.vpc.id }}"
    cidr: "{{ aws_connected_public_subnet_cidr_az1 }}"
    region: "{{ aws_region }}"
    az: "{{ aws_availability_zone_1 }}"
    tags:
      Name: "{{ aws_connected_vpc_name }}-public-subnet-az1"
  register: connected_public_subnet_info_az1

- name: Create Connected Public Subnet on Az2
  amazon.aws.ec2_vpc_subnet:
    state: present
    vpc_id: "{{ connected_vpc_info.vpc.id }}"
    cidr: "{{ aws_connected_public_subnet_cidr_az2 }}"
    region: "{{ aws_region }}"
    az: "{{ aws_availability_zone_2 }}"
    tags:
      Name: "{{ aws_connected_vpc_name }}-public-subnet-az2"
  register: connected_public_subnet_info_az2

- name: Create Connected Public Subnet on Az3
  amazon.aws.ec2_vpc_subnet:
    state: present
    vpc_id: "{{ connected_vpc_info.vpc.id }}"
    cidr: "{{ aws_connected_public_subnet_cidr_az3 }}"
    region: "{{ aws_region }}"
    az: "{{ aws_availability_zone_3 }}"
    tags:
      Name: "{{ aws_connected_vpc_name }}-public-subnet-az3"
  register: connected_public_subnet_info_az3

- name: Create Internet Gateway on Egress VPC
  amazon.aws.ec2_vpc_igw:
    vpc_id: "{{ connected_vpc_info.vpc.id }}"
    state: present
    region: "{{ aws_region }}"
    tags:
      Name: "{{ aws_connected_vpc_name }}-igw"
  register: igw

- name: Connect Public Subnets to IGW
  amazon.aws.ec2_vpc_route_table:
    vpc_id: "{{ connected_vpc_info.vpc.id }}"
    region: "{{ aws_region }}"
    tags:
      Name: "{{ prefix_for_name }}-connected-rt-igw"
    subnets:
      - "{{ connected_public_subnet_info_az1.subnet.id }}"
      - "{{ connected_public_subnet_info_az2.subnet.id }}"
      - "{{ connected_public_subnet_info_az3.subnet.id }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ igw.gateway_id }}"
  register: connected_rt_public

- name: Create NAT Gateway in Public Subnet AZ1
  amazon.aws.ec2_vpc_nat_gateway:
    state: present
    subnet_id: "{{ connected_public_subnet_info_az1.subnet.id }}"
    wait: yes
    if_exist_do_not_create: true
    region: "{{ aws_region }}"
    connectivity_type: public
  register: nat_gateway_public_subnet_az1

- name: Connect Private Subnets to NAT Gateway on AZ1
  amazon.aws.ec2_vpc_route_table:
    vpc_id: "{{ connected_vpc_info.vpc.id }}"
    region: "{{ aws_region }}"
    resource_tags:
      Name: "{{ prefix_for_name }}-rt-nat"
    subnets:
      - "{{ connected_subnet_info_az1.subnet.id }}"
      - "{{ connected_subnet_info_az2.subnet.id }}"
      - "{{ connected_subnet_info_az3.subnet.id }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ nat_gateway_public_subnet_az1.nat_gateway_id }}"
  register: connected_rt_private

- name: Create S3 VPC Endpoints required for Openshift installation in connected mode
  amazon.aws.ec2_vpc_endpoint:
    state: present
    region: "{{ aws_region }}"
    vpc_id: "{{ connected_vpc_info.vpc.id }}"
    service: "com.amazonaws.{{ aws_region }}.s3"
    route_table_ids:
      - "{{ connected_rt_public.route_table.route_table_id }}"
      - "{{ connected_rt_private.route_table.route_table_id }}"
    tags:
      Name: "{{ prefix_for_name }}-s3-connected"
